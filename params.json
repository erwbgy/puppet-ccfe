{"note":"Don't delete this file! It's used internally to help with page regeneration.","body":"# puppet-ccfe\r\n\r\nPuppet module for creating menus and menu items using the Curses Command\r\nFront-end (CCFE) menu system - http://cfe.altervista.org/en/\r\n\r\nCurrently only tested on Redhat-like systems.\r\n\r\n## Usage\r\n\r\nThe recommended usage is to place the configuration in a hiera config file and\r\njust include the ccfe module in your puppet configuration:\r\n\r\n    include ccfe\r\n\r\nExample hiera config:\r\n\r\n    ccfe::filestore:    'puppet:///files/ccfe',\r\n    ccfe::package_file: 'ccfe-1.57-1.noarch.rpm'\r\n    ccfe::menu_wrapper: 'true'\r\n    \r\n    ccfe::menus:\r\n      menu:\r\n        description: 'Main Menu'\r\n        items:\r\n          user_services:\r\n            description: 'User Services'\r\n            action: 'menu:services'\r\n          system_services:\r\n            description:  'System Services'\r\n            action: 'run:/sbin/service --status-all'\r\n      services:\r\n        description: 'Logscape'\r\n        group: 'logscape'\r\n\r\n    ccfe::items:\r\n      01_logscape_taillogfile:\r\n        parent: 'services'\r\n        description: 'logscape service: tail log file'\r\n        action: 'run:/usr/bin/sudo -Hi -u logscape /usr/bin/tail -n 100 -f ~logscape/logs/logscape/current'\r\n      02_logscape_status:\r\n        parent: 'services'\r\n        description: 'logscape service: status'\r\n        action: 'run:/usr/bin/sudo -Hi -u logscape /sbin/sv -w60 stat logscape'\r\n      03_logscape_restart:\r\n        parent: 'services'\r\n        description: 'logscape service: status'\r\n        action: 'run:/usr/bin/sudo -Hi -u logscape /sbin/sv -w60 stat logscape'\r\n\r\nThis example does the following:\r\n\r\n* Creates a */usr/bin/menu* wrapper script that calls */usr/bin/ccfe menu* to\r\n  display the menu called *menu*\r\n\r\n* Creates a menu called *menu* with a *User Services* entry and a *System Services* entry\r\n\r\n* Selecting the *System Services* entry executes */sbin/service* to show the status of system services\r\n\r\n* Selecting the *User Services* entry calls another menu called *services*\r\n\r\n* For members of the *logscape* group (and the owner *root*) the *services*\r\n  menu has three items and selecting each of these runs a command.  Non-members\r\n  will not be able to access this menu.\r\n\r\nIf the contents of the menu is known beforehand then it can be constructed\r\ncompletely using the ccfe::menus configuration in hiera or calling the\r\nccfe::menus parameterised class with an appropriate config parameter hash.\r\n\r\nTo dynamically add menu items the ccfe::items configuration in hiera or\r\nccfe::items parameterised class can be used. The menus themselves must already\r\nhave been created using ccfe::menus though.\r\n\r\nIf menu_wrapper is set to true, which it is by default, then your top-level\r\nmenu should be called *menu* and will be displayed when the */usr/bin/menu*\r\ncommand is executed.\r\n\r\nIf the group parameter is passed when creating a menu then only members of that\r\ngroup (and the owner - usually root) will be able to access the menu.\r\n\r\n## ccfe\r\n\r\n*basedir*: The base directory under which menus are created. Default: */usr/lib/ccfe/ccfe*\r\n\r\n*filestore*: The Puppet Master file store location where the CCFE package file\r\nis located. Default: *puppet:///files/ccfe*\r\n\r\n*package_file*: The CCFE package filename. Default: *ccfe-1.57-1.noarch.rpm*\r\n\r\n*menu_wrapper*: Whether or not to create the */usr/bin/menu* wrapper script so\r\nusers can just type *menu*. Default: true\r\n\r\n*workspace*: The directory on the Puppet agent host that is used to store the\r\npackage file before it is installed. Default: */root/ccfe*\r\n\r\n## ccfe::menus\r\n\r\nClass that creates ccfe::menu resources from a ccfe::menus hash in hiera or the\r\nconfig parameter.\r\n\r\n## ccfe::menu\r\n\r\n*title*: The unique menu id.\r\n\r\n*description*: The title that will be displayed above the menu.  Default: $title\r\n\r\n*user*: The user that the menu files will be owned by. Default: *root*\r\n\r\n*group*: The group that the menu files will be owned by. Default: *root*\r\n\r\n*items*: A hash of ccfe::item resources to create under this menu. Default: {}\r\n\r\n## ccfe::items\r\n\r\nClass that creates ccfe::item resources from a ccfe::menus hash in hiera or the\r\nconfig parameter.\r\n\r\n## ccfe::item\r\n\r\n*title*: The unique menu item id\r\n\r\n*parent*: The parent menu that this item is part of. Required.\r\n\r\n*action*: The action to take when this meny item is selected.  Can be either *menu:[menu name]* to select another menu or *run:[command]* to execute a command. Required.\r\n\r\n*description*: The menu item description that is displayed.  Default: $title\r\n\r\n## Notes\r\n\r\nNot all CCFE functionality is supported and in particular support for forms in\r\nmissing.\r\n\r\n## Support\r\n\r\nLicense: Apache License, Version 2.0\r\n\r\nGitHub URL: https://github.com/erwbgy/puppet-ccfe\r\n","name":"Puppet-ccfe","tagline":"Create Curses Command Front-end (CCFE) menus","google":"UA-37513727-1"}